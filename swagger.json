{
  "openapi": "3.0.0",
  "info": {
    "title": "IMF Gadget API",
    "version": "1.0.0",
    "description": "API for managing IMF gadgets with JWT authentication",
    "contact": {
      "name": "IMF Technical Support",
      "email": "techsupport@imf.gov"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "username": { "type": "string" }
        }
      },
      "Gadget": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "codename": { "type": "string" },
          "status": { 
            "type": "string", 
            "enum": ["Available", "In Use", "Decommissioned", "Destroyed"] 
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "decommissionedAt": { "type": ["string", "null"], "format": "date-time" },
          "destroyedAt": { "type": ["string", "null"], "format": "date-time" }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "refreshToken": { "type": "string" },
          "user": { "$ref": "#/components/schemas/User" }
        }
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string", "minLength": 6 }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": { "description": "Bad request" }
        },
        "security": []
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user and get JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" }
        },
        "security": []
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "description": "Get new access token using refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": { "type": "string" }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Invalid refresh token" }
        }
      }
    },
    "/gadgets": {
      "get": {
        "tags": ["Gadgets"],
        "summary": "Get all gadgets",
        "description": "Get list of gadgets, optionally filtered by status",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["Available", "In Use", "Decommissioned", "Destroyed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of gadgets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Gadget" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Gadgets"],
        "summary": "Create a gadget",
        "description": "Create a new gadget",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "codename": { "type": "string" },
                  "status": { 
                    "type": "string", 
                    "enum": ["Available", "In Use"],
                    "default": "Available"
                  }
                },
                "required": ["name", "codename"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gadget created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Gadget" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/gadgets/{id}": {
      "get": {
        "tags": ["Gadgets"],
        "summary": "Get gadget by ID",
        "description": "Get gadget details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Gadget details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Gadget" }
              }
            }
          },
          "404": { "description": "Not found" }
        }
      },
      "patch": {
        "tags": ["Gadgets"],
        "summary": "Update a gadget",
        "description": "Update gadget details",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "codename": { "type": "string" },
                  "status": { 
                    "type": "string", 
                    "enum": ["Available", "In Use", "Decommissioned"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gadget updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Gadget" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["Gadgets"],
        "summary": "Decommission a gadget",
        "description": "Mark a gadget as decommissioned",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": { "description": "Gadget decommissioned" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/gadgets/{id}/generate-confirmation": {
      "post": {
        "tags": ["Gadgets"],
        "summary": "Generate self-destruct confirmation code",
        "description": "Generate a confirmation code for self-destruct",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation code generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "confirmationCode": { "type": "string" },
                    "expiresIn": { "type": "string", "example": "5 minutes" }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/gadgets/{id}/self-destruct": {
      "post": {
        "tags": ["Gadgets"],
        "summary": "Trigger self-destruct",
        "description": "Initiate gadget self-destruct sequence",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmation": { "type": "string" }
                },
                "required": ["confirmation"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Self-destruct initiated" },
          "400": { "description": "Invalid or expired confirmation code" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check",
        "description": "Check API health status",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "timestamp": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    }
  }
}